Index: app/src/main/java/com/example/cscb07project/ui/complaintForm/complaintFormFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cscb07project.ui.complaintForm;\n\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\n\nimport androidx.fragment.app.Fragment;\nimport androidx.lifecycle.ViewModelProvider;\n\nimport com.example.cscb07project.R;\n\nimport com.example.cscb07project.ui.createannouncement.CreateAnnouncementViewModel;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\n\npublic class complaintFormFragment extends Fragment {\n\n    private EditText editTextComplaint;\n    private Button buttonSubmit;\n\n    private DatabaseReference databaseReference;\n\n    public complaintFormFragment() {\n\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        ComplaintFormViewModel complaintformviewmodel =\n                new ViewModelProvider(this).get(ComplaintFormViewModel.class);\n\n\n        // Inflate the layout for this fragment\n        View view = inflater.inflate(R.layout.fragment_complaint_form, container, false);\n\n        // Initialize Firebase\n        databaseReference = FirebaseDatabase.getInstance().getReference(\"complaints\");\n\n        // Initialize UI components\n        editTextComplaint = view.findViewById(R.id.editTextComplaint);\n        buttonSubmit = view.findViewById(R.id.buttonSubmit);\n\n        // onClickListener for the \"Submit\" button\n        buttonSubmit.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                submitComplaint();\n            }\n        });\n\n        return view;\n    }\n\n    private void submitComplaint() {\n        // Get complaint text from EditText (user interaction)\n        String complaintText = editTextComplaint.getText().toString().trim();\n\n        if (!complaintText.isEmpty()) {\n            String username = \"AnonymousHuman\";\n\n            // Generate a unique key for the complaint\n            String key = databaseReference.push().getKey();\n\n            // Store the complaint into the instance of Complaint\n            Complaint complaint = new Complaint(complaintText, username);\n\n            // Send the complaint to Firebase\n            databaseReference.child(key).setValue(complaint, new DatabaseReference.CompletionListener() {\n                @Override\n                public void onComplete(@Nullable DatabaseError error, @NonNull DatabaseReference ref) {\n                    if (error == null) {\n                        // Success\n                        editTextComplaint.setText(\"\");\n                        Toast.makeText(requireContext(), \"Complaint submitted successfully\", Toast.LENGTH_SHORT).show();\n                    } else {\n                        // Handle the error\n                        Toast.makeText(requireContext(), \"Failed to submit complaint. Please try again.\", Toast.LENGTH_SHORT).show();\n\n                    }\n                }\n            });\n        } else {\n            // An error message shows up if the user types no message\n            editTextComplaint.setError(\"Please enter your complaint.\");\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cscb07project/ui/complaintForm/complaintFormFragment.java b/app/src/main/java/com/example/cscb07project/ui/complaintForm/complaintFormFragment.java
--- a/app/src/main/java/com/example/cscb07project/ui/complaintForm/complaintFormFragment.java	
+++ b/app/src/main/java/com/example/cscb07project/ui/complaintForm/complaintFormFragment.java	
@@ -5,25 +5,32 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
+import android.widget.CheckBox;
 import android.widget.EditText;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
-
 import androidx.fragment.app.Fragment;
-import androidx.lifecycle.ViewModelProvider;
-
 import com.example.cscb07project.R;
 
-import com.example.cscb07project.ui.createannouncement.CreateAnnouncementViewModel;
+import java.text.SimpleDateFormat;
+
+
 import com.google.firebase.database.DatabaseError;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ServerValue;
+
+import java.util.Date;
+import java.util.HashMap;
+import java.util.Locale;
 
 public class complaintFormFragment extends Fragment {
 
     private EditText editTextComplaint;
+    private EditText editTextUTORid;
+    private CheckBox checkBoxAnonymous;
     private Button buttonSubmit;
 
     private DatabaseReference databaseReference;
@@ -35,11 +42,7 @@
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
-        ComplaintFormViewModel complaintformviewmodel =
-                new ViewModelProvider(this).get(ComplaintFormViewModel.class);
 
-
-        // Inflate the layout for this fragment
         View view = inflater.inflate(R.layout.fragment_complaint_form, container, false);
 
         // Initialize Firebase
@@ -47,9 +50,10 @@
 
         // Initialize UI components
         editTextComplaint = view.findViewById(R.id.editTextComplaint);
+        editTextUTORid = view.findViewById(R.id.editTextStudentId);
+        checkBoxAnonymous = view.findViewById(R.id.checkBoxAnonymous);
         buttonSubmit = view.findViewById(R.id.buttonSubmit);
 
-        // onClickListener for the "Submit" button
         buttonSubmit.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -61,37 +65,67 @@
     }
 
     private void submitComplaint() {
-        // Get complaint text from EditText (user interaction)
+        // Get complaint text from EditText
         String complaintText = editTextComplaint.getText().toString().trim();
+        String UTORid = editTextUTORid.getText().toString().trim();
+        boolean isAnonymous = checkBoxAnonymous.isChecked();
 
         if (!complaintText.isEmpty()) {
-            String username = "AnonymousHuman";
+            if (isAnonymous) {
+                // Clear the UTORid if anonymous is checked
+                UTORid = "unavailable";
+            } else {
+                if (UTORid.isEmpty()) {
+                    // Show error message if UTORid is empty and not anonymous
+                    editTextUTORid.setError("Please enter your UTORid.");
+                    return;
+                }
+            }
 
             // Generate a unique key for the complaint
             String key = databaseReference.push().getKey();
 
-            // Store the complaint into the instance of Complaint
-            Complaint complaint = new Complaint(complaintText, username);
+            // Determine the status based on the anonymity
+            String status;
+            if (isAnonymous) {
+                status = "Anonymous";
+            } else {
+                status = "Identified";
+            }
+
+            // An instance of the Complaint class
+            Complaint complaint = new Complaint(UTORid, status, complaintText);
+
+            HashMap<String, Object> complaintMap = new HashMap<>();
+            complaintMap.put("UTORid", complaint.getUTORid());
+            complaintMap.put("status", complaint.getStatus());
+            complaintMap.put("text", complaint.getText());
+            complaintMap.put("timeSubmitted", complaint.getTimeSubmitted());
 
             // Send the complaint to Firebase
-            databaseReference.child(key).setValue(complaint, new DatabaseReference.CompletionListener() {
+            databaseReference.child(key).setValue(complaintMap, new DatabaseReference.CompletionListener() {
                 @Override
-                public void onComplete(@Nullable DatabaseError error, @NonNull DatabaseReference ref) {
+                public void onComplete(@Nullable DatabaseError error,@NonNull DatabaseReference ref) {
                     if (error == null) {
-                        // Success
+                        // no errors
                         editTextComplaint.setText("");
+                        editTextUTORid.setText("");
+                        checkBoxAnonymous.setChecked(false);
+                        // Disable the UTORid EditText if anonymous is checked
+                        editTextUTORid.setEnabled(!isAnonymous);
                         Toast.makeText(requireContext(), "Complaint submitted successfully", Toast.LENGTH_SHORT).show();
                     } else {
-                        // Handle the error
+                        // some errors
                         Toast.makeText(requireContext(), "Failed to submit complaint. Please try again.", Toast.LENGTH_SHORT).show();
-
                     }
                 }
             });
         } else {
-            // An error message shows up if the user types no message
+            // when the complaint edit text is empty
             editTextComplaint.setError("Please enter your complaint.");
         }
     }
 
+
 }
+
Index: app/src/main/java/com/example/cscb07project/ui/complaintForm/Complaint.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cscb07project.ui.complaintForm;\n\npublic class Complaint {\n    private String text;\n    private String username;\n\n    public Complaint() {\n    }\n\n    public Complaint(String text, String username) {\n        this.text = text;\n        this.username = username;\n    }\n\n    public String getText() {\n        return text;\n    }\n\n    public String getUsername(){\n        return username;\n    }\n}\n
===================================================================
diff --git a/app/src/main/java/com/example/cscb07project/ui/complaintForm/Complaint.java b/app/src/main/java/com/example/cscb07project/ui/complaintForm/Complaint.java
--- a/app/src/main/java/com/example/cscb07project/ui/complaintForm/Complaint.java	
+++ b/app/src/main/java/com/example/cscb07project/ui/complaintForm/Complaint.java	
@@ -1,22 +1,60 @@
 package com.example.cscb07project.ui.complaintForm;
 
+
+
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.Locale;
+
 public class Complaint {
     private String text;
-    private String username;
+    private String UTORid;
+    private String status;
+    private String timeSubmitted;
 
     public Complaint() {
+
     }
 
-    public Complaint(String text, String username) {
+    public Complaint(String UTORid, String status, String text) {
         this.text = text;
-        this.username = username;
+        this.UTORid = UTORid;
+        this.status = status;
+
+        // Format the timestamp in the desired format
+        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MMMM-dd-HH:mm", Locale.getDefault());
+        this.timeSubmitted = dateFormat.format(new Date());
     }
+
 
     public String getText() {
         return text;
     }
 
-    public String getUsername(){
-        return username;
+    public String getUTORid() {
+        return UTORid;
+    }
+
+    public String getStatus() {
+        return status;
     }
+
+    public String getTimeSubmitted() {
+        return timeSubmitted;
+    }
+
+    // Method to convert Complaint object to HashMap for Firebase
+    public HashMap<String, Object> toHashMap() {
+        HashMap<String, Object> complaintMap = new HashMap<>();
+        complaintMap.put("UTORid", UTORid);
+        complaintMap.put("status", status);
+        complaintMap.put("text", text);
+        complaintMap.put("timeSubmitted", timeSubmitted);
+        return complaintMap;
+    }
 }
+
+
+
+
